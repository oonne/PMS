<template>
  <div class="today-step">
    <canvas class="step-canvas" id="step-canvas"></canvas>
    <text class="step-num">{{stepNum}}</text>
  </div>
</template>

<script>
import config from '../config/config'
let drawingChart = null //当前动画
const maxFrame = 40 //动画总帧数（按照每秒60帧计算）

export default {
  props: {
    step: {
      type: Number,
      default: 0
    }
  },
  data: {
    stepNum: 0,
  },
  onReady(){
    this.showTodayChart(this.step)
    this.$watch('step', 'showTodayChart')
  },
  /* 绘制动画 */ 
  showTodayChart(step){
    // 停止掉上一个动画
    if (drawingChart) {
      clearInterval(drawingChart)
    }

    const canvas = this.$element('step-canvas')
    const ctx = canvas.getContext('2d')

    let frame = 0
    drawingChart = setInterval(() => {
      frame ++
      if(frame >= maxFrame){
        clearInterval(drawingChart)
        drawingChart = null;
      }
      this.drawTodayChart(ctx, frame, step)
    }, 17)
  },
  /* 
   * 绘制帧
   * @param  {canvas.context} ctx 画布上下文 
   * @param  {int} frame 第几帧 
   * @param  {int} step 总步数 
   */
  drawTodayChart(ctx, i, step){
    const width = 1080 //画布宽
    const height = 960 //画布高
    const start = 0.7 //起点角度
    const end =  2.3 //终点角度

    // 清屏
    ctx.clearRect(0,0, width, height)
    
    // 绘制底图
    ctx.beginPath()
    ctx.arc(width/2, height/2, 320, start*Math.PI, end*Math.PI, false)
    ctx.lineCap = "round"
    ctx.lineWidth = 24
    const bgGradient = ctx.createLinearGradient(0, height, 0, 0)
    bgGradient.addColorStop(0, 'rgba(255,140,28, 0.38)')
    bgGradient.addColorStop(1, 'rgba(255,3,33, 0.38)')
    ctx.strokeStyle = bgGradient
    ctx.stroke()

    // 绘制实际数据
    let endAngle = (i/maxFrame)*(end-start)*(step/config.dailySteps)+start
    ctx.beginPath()
    ctx.arc(width/2, height/2, 320, start*Math.PI, endAngle*Math.PI, false)
    ctx.lineCap = "round"
    ctx.lineWidth = 24
    const fillGradient = ctx.createLinearGradient(0, height, 0, 0)
    fillGradient.addColorStop(0, '#ff8c1c')
    fillGradient.addColorStop(1, '#ff0321')
    ctx.strokeStyle = fillGradient
    ctx.stroke()

    // 刷新数字
    this.$set('stepNum', parseInt((i/maxFrame)*step))
  }
}
</script>

<style lang="less">
@import '../style/base.less';

.today-step{
  width: 1080px;
  height: 960px;
}
.step-canvas{
  position: absolute;
  width: 1080px;
  height: 960px;
}
.step-num{
  width: 100%;
  color: #fff;
  font-size: 120px;
  text-align: center;
}
</style>
